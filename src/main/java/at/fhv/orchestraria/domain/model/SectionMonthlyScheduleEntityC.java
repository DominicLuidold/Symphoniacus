package at.fhv.orchestraria.domain.model;

import at.fhv.orchestraria.domain.Imodel.IDutySectionMonthlySchedule;
import at.fhv.orchestraria.domain.Imodel.ISectionMonthlySchedule;

import javax.persistence.*;
import java.io.Serializable;
import java.util.Collection;
import java.util.Collections;
import java.util.Objects;

/**
 * @author generated by Intellij -  edited by Team C
 */

/*
 * Generated by IntelliJ
 */

@Entity
@Table(name = "sectionMonthlySchedule", schema = "ni128610_1sql8")
public class SectionMonthlyScheduleEntityC implements ISectionMonthlySchedule, Serializable {
    private int sectionMonthlyScheduleId;
    private boolean isReadyForDutyScheduler;
    private boolean isReadyForOrganisationManager;
    private boolean isPublished;
    private Collection<DutySectionMonthlyScheduleEntityC> dutySectionMonthlySchedules;
    private MonthlyScheduleEntityC monthlySchedule;
    private SectionEntityC section;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "sectionMonthlyScheduleId")
    @Override
    public int getSectionMonthlyScheduleId() {
        return sectionMonthlyScheduleId;
    }

    public void setSectionMonthlyScheduleId(int sectionMonthlyScheduleId) {
        this.sectionMonthlyScheduleId = sectionMonthlyScheduleId;
    }

    @Basic
    @Column(name = "isReadyForDutyScheduler")
    @Override
    public boolean isReadyForDutyScheduler() {
        return isReadyForDutyScheduler;
    }

    public void setReadyForDutyScheduler(boolean readyForDutyScheduler) {
        isReadyForDutyScheduler = readyForDutyScheduler;
    }

    @Basic
    @Column(name = "isReadyForOrganisationManager")
    @Override
    public boolean isReadyForOrganisationManager() {
        return isReadyForOrganisationManager;
    }

    public void setReadyForOrganisationManager(boolean readyForOrganisationManager) {
        isReadyForOrganisationManager = readyForOrganisationManager;
    }

    @Basic
    @Column(name = "isPublished")
    @Override
    public boolean isPublished() {
        return isPublished;
    }

    public void setPublished(boolean published) {
        isPublished = published;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        SectionMonthlyScheduleEntityC that = (SectionMonthlyScheduleEntityC) o;
        return sectionMonthlyScheduleId == that.sectionMonthlyScheduleId &&
                isReadyForDutyScheduler == that.isReadyForDutyScheduler &&
                isReadyForOrganisationManager == that.isReadyForOrganisationManager &&
                isPublished == that.isPublished;
    }

    @Override
    public int hashCode() {
        return Objects.hash(sectionMonthlyScheduleId, isReadyForDutyScheduler, isReadyForOrganisationManager, isPublished);
    }

    @OneToMany(mappedBy = "sectionMonthlySchedule")
    public Collection<DutySectionMonthlyScheduleEntityC> getDutySectionMonthlySchedules() {
        return dutySectionMonthlySchedules;
    }

    public void setDutySectionMonthlySchedules(Collection<DutySectionMonthlyScheduleEntityC> dutySectionMonthlySchedulesBySectionMonthlyScheduleId) {
        this.dutySectionMonthlySchedules = dutySectionMonthlySchedulesBySectionMonthlyScheduleId;
    }

    @ManyToOne
    @JoinColumn(name = "monthlyScheduleId", referencedColumnName = "monthlyScheduleId", nullable = false)
    @Override
    public MonthlyScheduleEntityC getMonthlySchedule() {
        return monthlySchedule;
    }

    public void setMonthlySchedule(MonthlyScheduleEntityC monthlySchedule) {
        this.monthlySchedule = monthlySchedule;
    }

    @ManyToOne
    @JoinColumn(name = "sectionId", referencedColumnName = "sectionId", nullable = false)
    @Override
    public SectionEntityC getSection() {
        return section;
    }

    public void setSection(SectionEntityC section) {
        this.section = section;
    }


    /*
     * Interface methods
     */

    @Transient
    @Override
    public Collection<IDutySectionMonthlySchedule> getIDutySectionMonthlySchedules(){
        return Collections.unmodifiableCollection(getDutySectionMonthlySchedules());
    }
}
