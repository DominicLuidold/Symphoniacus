package at.fhv.orchestraria.domain.model;

import at.fhv.orchestraria.domain.Imodel.INegativeDateMonthlySchedule;
import at.fhv.orchestraria.domain.Imodel.INegativeDateWish;

import javax.persistence.*;
import java.io.Serializable;
import java.time.LocalDate;
import java.util.Collection;
import java.util.Collections;
import java.util.Objects;

/**
 * @author generated by Intellij -  edited by Team C
 */

/*
 * Generated by IntelliJ
 */

@Entity
@Table(name = "negativeDateWish", schema = "ni128610_1sql8")
public class NegativeDateWishEntity implements INegativeDateWish, Serializable {
    private int negativeDateId;
    private String description;
    private LocalDate startDate;
    private LocalDate endDate;
    private MusicianEntity musician;
    private Collection<NegativeDateMonthlyScheduleEntity> negativeDateMonthlySchedules;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "negativeDateId")
    @Override
    public int getNegativeDateId() {
        return negativeDateId;
    }

    public void setNegativeDateId(int negativeDateId) {
        this.negativeDateId = negativeDateId;
    }

    @Basic
    @Column(name = "description")
    @Override
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Basic
    @Column(name = "startDate")
    @Override
    public LocalDate getStartDate() {
        return startDate;
    }

    public void setStartDate(LocalDate startDate) {
        this.startDate = startDate;
    }

    @Basic
    @Column(name = "endDate")
    @Override
    public LocalDate getEndDate() {
        return endDate;
    }

    public void setEndDate(LocalDate endDate) {
        this.endDate = endDate;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        NegativeDateWishEntity that = (NegativeDateWishEntity) o;
        return negativeDateId == that.negativeDateId &&
                Objects.equals(description, that.description) &&
                Objects.equals(startDate, that.startDate) &&
                Objects.equals(endDate, that.endDate);
    }

    @Override
    public int hashCode() {
        return Objects.hash(negativeDateId, description, startDate, endDate);
    }

    @ManyToOne
    @JoinColumn(name = "musicianId", referencedColumnName = "musicianId")
    @Override
    public MusicianEntity getMusician() {
        return musician;
    }

    public void setMusician(MusicianEntity musician) {
        this.musician = musician;
    }

    @OneToMany(mappedBy = "negativeDateWish")
    public Collection<NegativeDateMonthlyScheduleEntity> getNegativeDateMonthlySchedules() {
        return negativeDateMonthlySchedules;
    }

    public void setNegativeDateMonthlySchedules(Collection<NegativeDateMonthlyScheduleEntity> negativeDateMonthlySchedulesByNegativeDateId) {
        this.negativeDateMonthlySchedules = negativeDateMonthlySchedulesByNegativeDateId;
    }


    /*
     *Interface methods
     */

    @Transient
    @Override
    public Collection<INegativeDateMonthlySchedule> getINegativeDateMonthlySchedules(){
        return Collections.unmodifiableCollection(getNegativeDateMonthlySchedules());
    }
}
