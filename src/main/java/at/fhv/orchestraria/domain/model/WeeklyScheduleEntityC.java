package at.fhv.orchestraria.domain.model;

import at.fhv.orchestraria.domain.Imodel.IDuty;
import at.fhv.orchestraria.domain.Imodel.IWeeklySchedule;

import at.fhv.orchestraria.domain.integrationInterfaces.IntegratableWeeklySchedule;
import javax.persistence.*;
import java.io.Serializable;
import java.sql.Date;
import java.util.Collection;
import java.util.Collections;
import java.util.Objects;

/**
 * @author generated by Intellij -  edited by Team C
 */

/*
 * Generated by IntelliJ
 */

@Entity
@Table(name = "weeklySchedule", schema = "ni128610_1sql8")
public class WeeklyScheduleEntityC implements IWeeklySchedule, IntegratableWeeklySchedule, Serializable {
    private int weeklyScheduleId;
    private Date startDate;
    private Date endDate;
    private int year;
    private Date publishDate;
    private boolean isConfirmed;
    private Collection<DutyEntityC> duties;
    private MonthlyScheduleEntityC monthlySchedule;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "weeklyScheduleId")
    @Override
    public int getWeeklyScheduleId() {
        return weeklyScheduleId;
    }

    public void setWeeklyScheduleId(int weeklyScheduleId) {
        this.weeklyScheduleId = weeklyScheduleId;
    }

    @Basic
    @Column(name = "startDate")
    @Override
    public Date getStartDate() {
        return startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @Basic
    @Column(name = "endDate")
    @Override
    public Date getEndDate() {
        return endDate;
    }

    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    @Basic
    @Column(name = "year")
    @Override
    public int getYear() {
        return year;
    }

    public void setYear(int year) {
        this.year = year;
    }

    @Basic
    @Column(name = "publishDate")
    @Override
    public Date getPublishDate() {
        return publishDate;
    }

    public void setPublishDate(Date publishDate) {
        this.publishDate = publishDate;
    }

    @Basic
    @Column(name = "isConfirmed")
    @Override
    public boolean isConfirmed() {
        return isConfirmed;
    }

    public void setConfirmed(boolean confirmed) {
        isConfirmed = confirmed;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        WeeklyScheduleEntityC that = (WeeklyScheduleEntityC) o;
        return weeklyScheduleId == that.weeklyScheduleId &&
                year == that.year &&
                isConfirmed == that.isConfirmed &&
                Objects.equals(startDate, that.startDate) &&
                Objects.equals(endDate, that.endDate) &&
                Objects.equals(publishDate, that.publishDate);
    }

    @Override
    public int hashCode() {
        return Objects.hash(weeklyScheduleId, startDate, endDate, year, publishDate, isConfirmed);
    }

    @OneToMany(mappedBy = "weeklySchedule")
    public Collection<DutyEntityC> getDuties() {
        return duties;
    }

    public void setDuties(Collection<DutyEntityC> dutiesByWeeklyScheduleId) {
        this.duties = dutiesByWeeklyScheduleId;
    }

    @ManyToOne
    @JoinColumn(name = "monthlyScheduleId", referencedColumnName = "monthlyScheduleId", nullable = false)
    @Override
    public MonthlyScheduleEntityC getMonthlySchedule() {
        return monthlySchedule;
    }

    public void setMonthlySchedule(MonthlyScheduleEntityC monthlySchedule) {
        this.monthlySchedule = monthlySchedule;
    }


    /*
     * Interface methods
     */

    @Transient
    @Override
    public Collection<IDuty> getIDuties(){
        return Collections.unmodifiableCollection(getDuties());
    }
}
