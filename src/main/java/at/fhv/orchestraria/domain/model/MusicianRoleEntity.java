package at.fhv.orchestraria.domain.model;

import at.fhv.orchestraria.domain.Imodel.IMusicianRole;
import at.fhv.orchestraria.domain.Imodel.IMusicianRoleMusician;

import javax.persistence.*;
import java.io.Serializable;
import java.util.Collection;
import java.util.Collections;
import java.util.Objects;

/**
 * @author generated by Intellij -  edited by Team C
 */

/*
 * Generated by IntelliJ
 */

@Entity
@Table(name = "musicianRole", schema = "ni128610_1sql8")
public class MusicianRoleEntity implements IMusicianRole, Serializable {
    private int musicianRoleId;
    private String description;
    private Collection<MusicianRoleMusicianEntity> musicianRoleMusicians;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "musicianRoleId")
    @Override
    public int getMusicianRoleId() {
        return musicianRoleId;
    }

    public void setMusicianRoleId(int musicianRoleId) {
        this.musicianRoleId = musicianRoleId;
    }

    @Basic
    @Column(name = "description")
    @Override
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        MusicianRoleEntity that = (MusicianRoleEntity) o;
        return musicianRoleId == that.musicianRoleId &&
                Objects.equals(description, that.description);
    }

    @Override
    public int hashCode() {
        return Objects.hash(musicianRoleId, description);
    }

    @OneToMany(mappedBy = "musicianRole", cascade = CascadeType.MERGE)
    public Collection<MusicianRoleMusicianEntity> getMusicianRoleMusicians() {
        return musicianRoleMusicians;
    }

    public void setMusicianRoleMusicians(Collection<MusicianRoleMusicianEntity> musicianRoleMusiciansByMusicianRoleId) {
        this.musicianRoleMusicians = musicianRoleMusiciansByMusicianRoleId;
    }

    /*
     *Interface methods
     */

    @Transient
    @Override
    public Collection<IMusicianRoleMusician> getIMusicianRoleMusicians(){
        return Collections.unmodifiableCollection(getMusicianRoleMusicians());
    }

}
