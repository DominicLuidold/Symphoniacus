package at.fhv.orchestraria.domain.model;

import at.fhv.orchestraria.domain.Imodel.IMonthlySchedule;
import at.fhv.orchestraria.domain.Imodel.INegativeDateMonthlySchedule;
import at.fhv.orchestraria.domain.Imodel.ISectionMonthlySchedule;
import at.fhv.orchestraria.domain.Imodel.IWeeklySchedule;

import javax.persistence.*;
import java.io.Serializable;
import java.sql.Date;
import java.util.Collection;
import java.util.Collections;
import java.util.Objects;

/**
 * @author generated by Intellij -  edited by Team C
 */

/*
 * Generated by IntelliJ
 */

@Entity
@Table(name = "monthlySchedule", schema = "ni128610_1sql8")
public class MonthlyScheduleEntity implements IMonthlySchedule, Serializable {
    private int monthlyScheduleId;
    private int month;
    private int year;
    private Date publishDate;
    private Date endDateClassification;
    private boolean isPublished;
    private Date endWish;
    private Collection<NegativeDateMonthlyScheduleEntity> negativeDateMonthlySchedules;
    private Collection<SectionMonthlyScheduleEntity> sectionMonthlySchedules;
    private Collection<WeeklyScheduleEntity> weeklySchedules;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "monthlyScheduleId")
    @Override
    public int getMonthlyScheduleId() {
        return monthlyScheduleId;
    }

    public void setMonthlyScheduleId(int monthlyScheduleId) {
        this.monthlyScheduleId = monthlyScheduleId;
    }

    @Basic
    @Column(name = "month")
    @Override
    public int getMonth() {
        return month;
    }

    public void setMonth(int month) {
        this.month = month;
    }

    @Basic
    @Column(name = "year")
    @Override
    public int getYear() {
        return year;
    }

    public void setYear(int year) {
        this.year = year;
    }

    @Basic
    @Column(name = "publishDate")
    @Override
    public Date getPublishDate() {
        return publishDate;
    }

    public void setPublishDate(Date publishDate) {
        this.publishDate = publishDate;
    }

    @Basic
    @Column(name = "endDateClassification")
    @Override
    public Date getEndDateClassification() {
        return endDateClassification;
    }

    public void setEndDateClassification(Date endDateClassification) {
        this.endDateClassification = endDateClassification;
    }

    @Basic
    @Column(name = "isPublished")
    @Override
    public boolean isPublished() {
        return isPublished;
    }

    public void setPublished(boolean published) {
        isPublished = published;
    }

    @Basic
    @Column(name = "endWish")
    @Override
    public Date getEndWish() {
        return endWish;
    }

    public void setEndWish(Date endWish) {
        this.endWish = endWish;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        MonthlyScheduleEntity that = (MonthlyScheduleEntity) o;
        return monthlyScheduleId == that.monthlyScheduleId &&
                month == that.month &&
                year == that.year &&
                isPublished == that.isPublished &&
                Objects.equals(publishDate, that.publishDate) &&
                Objects.equals(endDateClassification, that.endDateClassification) &&
                Objects.equals(endWish, that.endWish);
    }

    @Override
    public int hashCode() {
        return Objects.hash(monthlyScheduleId, month, year, publishDate, endDateClassification, isPublished, endWish);
    }

    @OneToMany(mappedBy = "monthlySchedule")
    public Collection<NegativeDateMonthlyScheduleEntity> getNegativeDateMonthlySchedules() {
        return negativeDateMonthlySchedules;
    }

    public void setNegativeDateMonthlySchedules(Collection<NegativeDateMonthlyScheduleEntity> negativeDateMonthlySchedulesByMonthlyScheduleId) {
        this.negativeDateMonthlySchedules = negativeDateMonthlySchedulesByMonthlyScheduleId;
    }

    @OneToMany(mappedBy = "monthlySchedule")
    public Collection<SectionMonthlyScheduleEntity> getSectionMonthlySchedules() {
        return sectionMonthlySchedules;
    }

    public void setSectionMonthlySchedules(Collection<SectionMonthlyScheduleEntity> sectionMonthlySchedulesByMonthlyScheduleId) {
        this.sectionMonthlySchedules = sectionMonthlySchedulesByMonthlyScheduleId;
    }

    @OneToMany(mappedBy = "monthlySchedule")
    public Collection<WeeklyScheduleEntity> getWeeklySchedules() {
        return weeklySchedules;
    }

    public void setWeeklySchedules(Collection<WeeklyScheduleEntity> weeklySchedulesByMonthlyScheduleId) {
        this.weeklySchedules = weeklySchedulesByMonthlyScheduleId;
    }

    /*
     *Interface Methods
    */

    @Transient
    @Override
    public Collection<INegativeDateMonthlySchedule> getINegativeDateMonthlySchedules(){
        return Collections.unmodifiableCollection(getNegativeDateMonthlySchedules());
    }

    @Transient
    @Override
    public Collection<ISectionMonthlySchedule> getISectionMonthlySchedules(){
        return Collections.unmodifiableCollection(getSectionMonthlySchedules());
    }

    @Transient
    @Override
    public Collection<IWeeklySchedule> getIWeeklySchedules(){
        return Collections.unmodifiableCollection(getWeeklySchedules());
    }
}
