package at.fhv.orchestraria.domain.model;

import at.fhv.orchestraria.domain.Imodel.IContractualObligation;

import javax.persistence.*;
import java.io.Serializable;
import java.time.LocalDate;
import java.util.Objects;

/**
 * @author generated by Intellij -  edited by Team C
 */

/*
 * Generated by IntelliJ
 */

@Entity
@Table(name = "contractualObligation", schema = "ni128610_1sql8")
public class ContractualObligationEntity implements IContractualObligation, Serializable {
    private int contractNr;
    private String position;
    private int pointsPerMonth;
    private LocalDate startDate;
    private LocalDate endDate;
    private MusicianEntity musician;
    private InstrumentCategoryEntity instrumentCategory;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "contractNr")
    @Override
    public int getContractNr() {
        return contractNr;
    }

    public void setContractNr(int contractNr) {
        this.contractNr = contractNr;
    }

    @Basic
    @Column(name = "position")
    @Override
    public String getPosition() {
        return position;
    }

    public void setPosition(String position) {
        this.position = position;
    }

    @Basic
    @Column(name = "PointsPerMonth")
    @Override
    public int getPointsPerMonth() {
        return pointsPerMonth;
    }

    public void setPointsPerMonth(int pointsPerMonth) {
        this.pointsPerMonth = pointsPerMonth;
    }

    @Basic
    @Column(name = "startDate")
    @Override
    public LocalDate getStartDate() {
        return startDate;
    }

    public void setStartDate(LocalDate startDate) {
        this.startDate = startDate;
    }

    @Basic
    @Column(name = "endDate")
    @Override
    public LocalDate getEndDate() {
        return endDate;
    }

    public void setEndDate(LocalDate endDate) {
        this.endDate = endDate;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        ContractualObligationEntity that = (ContractualObligationEntity) o;
        return contractNr == that.contractNr &&
                pointsPerMonth == that.pointsPerMonth &&
                Objects.equals(position, that.position) &&
                Objects.equals(startDate, that.startDate) &&
                Objects.equals(endDate, that.endDate);
    }

    @Override
    public int hashCode() {
        return Objects.hash(contractNr, position, pointsPerMonth, startDate, endDate);
    }

    @ManyToOne(cascade = CascadeType.MERGE)
    @JoinColumn(name = "musicianId", referencedColumnName = "musicianId", nullable = false)
    @Override
    public MusicianEntity getMusician() {
        return musician;
    }

    public void setMusician(MusicianEntity musicianByMusicianId) {
        this.musician = musicianByMusicianId;
    }

    @ManyToOne
    @JoinColumn(name = "instrumentCategoryId", referencedColumnName = "instrumentCategoryId")
    @Override
    public InstrumentCategoryEntity getInstrumentCategory() {
        return instrumentCategory;
    }

    public void setInstrumentCategory(InstrumentCategoryEntity instrumentCategoryByInstrumentCategoryId) {
        this.instrumentCategory = instrumentCategoryByInstrumentCategoryId;
    }
}
