package at.fhv.orchestraria.domain.model;

import at.fhv.orchestraria.domain.Imodel.IDutyPosition;
import at.fhv.orchestraria.domain.integrationInterfaces.IntegratableDutyPosition;

import javax.persistence.*;
import java.io.Serializable;
import java.util.Objects;

/**
 * @author generated by Intellij -  edited by Team C
 */

/*
 * Generated by IntelliJ
 */

@Entity
@Table(name = "dutyPosition", schema = "ni128610_1sql8")
public class DutyPositionEntityC implements IDutyPosition, IntegratableDutyPosition, Serializable {
    private int dutyPositionId;
    private String description;
    private InstrumentationPositionEntityC instrumentationPosition;
    private DutyEntityC duty;
    private SectionEntityC section;
    private MusicianEntityC musician;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "dutyPositionId")
    @Override
    public int getDutyPositionId() {
        return dutyPositionId;
    }

    public void setDutyPositionId(int dutyPositionId) {
        this.dutyPositionId = dutyPositionId;
    }

    @Basic
    @Column(name = "description")
    @Override
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        DutyPositionEntityC that = (DutyPositionEntityC) o;
        return dutyPositionId == that.dutyPositionId &&
                Objects.equals(description, that.description);
    }

    @Override
    public int hashCode() {
        return Objects.hash(dutyPositionId, description);
    }

    @ManyToOne
    @JoinColumn(name = "instrumentationPositionId", referencedColumnName = "instrumentationPositionId")
    @Override
    public InstrumentationPositionEntityC getInstrumentationPosition() {
        return instrumentationPosition;
    }

    public void setInstrumentationPosition(InstrumentationPositionEntityC instrumentationPosition) {
        this.instrumentationPosition = instrumentationPosition;
    }

    @ManyToOne
    @JoinColumn(name = "dutyId", referencedColumnName = "dutyId")
    @Override
    public DutyEntityC getDuty() {
        return duty;
    }

    public void setDuty(DutyEntityC duty) {
        this.duty = duty;
    }

    @ManyToOne
    @JoinColumn(name = "sectionId", referencedColumnName = "sectionId")
    @Override
    public SectionEntityC getSection() {
        return section;
    }

    public void setSection(SectionEntityC section) {
        this.section = section;
    }

    @ManyToOne(cascade = CascadeType.MERGE)
    @JoinColumn(name = "musicianId", referencedColumnName = "musicianId")
    @Override
    public MusicianEntityC getMusician() {
        return musician;
    }

    public void setMusician(MusicianEntityC musicianByDutyPositionId) {
        this.musician = musicianByDutyPositionId;
    }


}
