plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    /* Project specific plugins */
    id 'org.owasp.dependencycheck' version '5.3.2.1'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'distribution'
    id 'jacoco'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'org.sonarqube' version '2.8'
    id 'pmd'
}

repositories {
    jcenter()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    /* Project specific dependencies */
    compile 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    compile 'com.jfoenix:jfoenix:9.0.9'
    compile 'javax.persistence:javax.persistence-api:2.2'
    compile 'mysql:mysql-connector-java:5.1.13'
    compile 'org.apache.logging.log4j:log4j-api:2.13.2'
    compile 'org.apache.logging.log4j:log4j-core:2.13.2'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.2'
    compile 'org.hibernate:hibernate-core:5.4.15.Final'

    implementation 'com.calendarfx:view:11.8.3'
    implementation ('org.controlsfx:controlsfx:11.0.1') {
        exclude group: 'org.controlsfx'
    }

    testCompile 'org.mockito:mockito-core:3.3.3'
    testCompile 'org.testfx:testfx-core:4.0.16-alpha'
    testCompile 'org.testfx:testfx-junit5:4.0.16-alpha'
}

application {
    mainClassName = 'at.fhv.teamb.symphoniacus.Main'
    applicationDefaultJvmArgs = [
            '--add-opens=javafx.graphics/com.sun.javafx.css=ALL-UNNAMED',
            '--add-opens=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED',
            '--add-opens=javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED',
            '--add-opens=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED',
            '--add-opens=javafx.base/com.sun.javafx.binding=ALL-UNNAMED',
            '--add-opens=javafx.graphics/com.sun.javafx.stage=ALL-UNNAMED',
            '--add-opens=javafx.base/com.sun.javafx.event=ALL-UNNAMED'
    ]
}

test {
    useJUnitPlatform()
}

/* Checkstyle configuration */
checkstyle {
    toolVersion = '8.32'
}

/* JavaFX configuration */
javafx {
    version = '14'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

/* JaCoCo configuration */
jacoco {
    toolVersion = '0.8.5'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

/* PMD configuration */
pmd {
    toolVersion = '6.21.0'
    consoleOutput = true
    ignoreFailures = true
    rulePriority = 5
    ruleSets = ['category/java/errorprone.xml', 'category/java/bestpractices.xml']
}

shadowJar {
    archiveFileName = 'Symphoniacus.jar'
    mergeServiceFiles()
    manifest {
        attributes(
                'Main-Class': "at.fhv.teamb.symphoniacus.Main"
        )
    }
}

distributions {
    main {
        distributionBaseName = 'main'
        contents {
            from shadowJar
        }
    }
}

build.dependsOn jacocoTestReport
